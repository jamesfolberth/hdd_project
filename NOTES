
==============
= WAVE files =
==============
We do not want to put data files in the repo.  We'll have to each make data directories (possibly subdirectories of the repo) that are ignored by git.

The csv files that contains the list of all the songs, along with the genres, has incorrect file extensions for the songs (uses .mp3 instead of .wav).

If you want to listen to any of these groovy tracks, use audioplayer.  For example
   player = audioplayer(wav, fs);
   play(player)
   pause(player)
   stop(player)





==========================
= Fluctuation Parameters =
==========================
Can compute FPs based on power spectrum or on a Mel scale.  One advantage of using Mel scale is we presumably already have the MFCCs.

There are other methods for computing the frequency modulation.  See [PDW03a].




=======
= FFT =
=======
I believe there exist methods for computing two real FFTs for O(N\log N) + O(N) recovery work (i.e. cheaper than two O(N\log N) separate FFTs).  We'll have to profile both implementations.
UPDATE: For our problem size (N=2^9=512), my MATLAB implementation of two real FFTs via one complex FFT plus O(N) work couldn't beat two real FFTs.

As of 18 Oct 2014, the FFT call in melFeatures.m is roughly half of the total cost of running melFeatures.m


============
= Matfiles =
============
save
load
matfile


==============
= References =
==============
http://blogs.mathworks.com/loren/2012/03/26/considering-performance-in-object-oriented-matlab-code/



==============
= Cross Vals =
==============

G1C spectral similarity + a few FPs as described in Pampalk '06.  Clustering with kNN, k=5.
>> crossValDistMat                 

probCorrect =

    0.7292


correctClassRate =

    0.9844
    0.7273
    0.2000
    0.5000
    0.7619
    0.2083


ans =

    63     0     2     0     1    10
     0    16     0     0     1     3
     0     0     1     0     0     0
     0     0     0     4     3     0
     0     5     2     4    16     6
     1     1     0     0     0     5


